on:
  push:
    branches:
    - main
    tags:
    - 'v*'

name: Release policy

jobs:
  test:
    name: Run Golang Unit Tests 
    uses: kubewarden/github-actions/.github/workflows/reusable-test-policy-go.yml@v1

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v1

      - name: Build and annotate policy
        uses: kubewarden/github-actions/policy-build-go@v1
        with:
          metadata-file: 'assets/metadata.yml'

      - name: Run E2E tests
        run: |
          make e2e-tests

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ inputs.GITHUB_TOKEN }}

      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
        shell: bash
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        env:
          COSIGN_EXPERIMENTAL: 1
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          set -ex
          echo Pushing policy to OCI container registry
          IMMUTABLE_REF=$(kwctl push -o json ${{ inputs.annotated-wasm }} ${{ inputs.oci-target }}:latest | jq -r .immutable_ref)
          echo Keyless signing of policy using cosign
          cosign sign --key cosign.key ${IMMUTABLE_REF}

      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc') }}

      - name: Upload Release Asset
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ inputs.annotated-wasm }}
          asset_name: policy.wasm
          asset_content_type: application/wasm
      -
        name: Notify policy-hub
        if: ${{ inputs.workflow-pat != '' && startsWith(github.ref, 'refs/tags/') && !(contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc')) }}
        uses: kubewarden/notify-policy-hub@main
        with:
          USERNAME: chimera-kube-bot
          PAT: ${{ inputs.workflow-pat }}        
